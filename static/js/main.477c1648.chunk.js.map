{"version":3,"sources":["reportWebVitals.js","HomePage.jsx","Footer.jsx","Header.jsx","Navbar.jsx","Projects.jsx","Contact.jsx","TicTacToe.jsx","router.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","HomePage","React","createElement","Fragment","Footer","className","Header","Navbar","NavLink","isActive","to","_ref2","_ref3","Projects","Contact","id","href","onClick","handleDownload","link","document","download","body","appendChild","click","removeChild","TicTacToe","squares","setSquares","useState","Array","from","length","_","idx","turn","setTurn","gameOver","setGameOver","map","value","index","key","Square","newSquares","slice","winner","newBoard","console","log","Router","HashRouter","basename","Routes","Route","path","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.477c1648.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nexport default function HomePage() {\n    return (\n        <>\n            <h2>Under construction...</h2>\n        </>\n    );\n}","import React from \"react\";\n\nexport function Footer() {\n    return (\n        <footer className=\"footer\">\n            Patrik Fjellstedt - Programmerare.\n            \n            {/* <button\n                className=\"github-button\"\n                onClick={window.open('https://github.com/Grimleik/portfolio', '_blank')}>\n                    Page Source\n            </button> */}\n        </footer>\n    );\n}","import React from \"react\";\nexport function Header() {\n    return (\n        <header className=\"pb-3 mb-4 border-bottom\">\n            <span className=\"fs-4\">\n                <h1>Patrik Fjellstedt's portfolio</h1>\n            </span>\n        </header>\n    );\n}","import React from \"react\";\nimport './App.css';\nimport { NavLink } from \"react-router-dom\";\n\nexport function Navbar() {\n    return (\n        <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n                <NavLink\n                    className={({ isActive }) => (isActive ? \"nav-link active\" : \"nav-link\")}\n                    to=\"/\">\n                    Home\n                </NavLink>\n            </li>\n\n            <li className=\"nav-item\">\n                <NavLink\n                    className={({ isActive }) => (isActive ? \"nav-link active\" : \"nav-link\")}\n                    to=\"/projects\">\n                    Projects\n                </NavLink>\n            </li>\n\n            <li className=\"nav-item\">\n                <NavLink\n                    className={({ isActive }) => (isActive ? \"nav-link active\" : \"nav-link\")}\n                    to=\"/contact\">\n                    Contact\n                </NavLink>\n            </li>\n        </ul>\n    );\n}\n","import React from \"react\";\n\nexport default function Projects() {\n\n    return (\n        <>\n        <h2>Under construction...</h2>\n        </>\n    );\n}","\n\nimport React from \"react\";\n\nexport default function Contact() {\n\n    const handleDownload = () => {\n        const link = document.createElement('a');\n        link.href = 'PatrikFjellstedt_CV.pdf'; // Specify the file path here\n        link.download = 'PatrikFjellstedt_CV.pdf'; // Specify the file name here\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n    return (\n        <React.Fragment>\n            <h1>Contact</h1>\n            <p> You can contact me at: </p>\n            <ul>\n                <li id=\"email\">\n                    <a href=\"mailto:patrik.fjellstedt@gmail.com\">Email</a>\n                </li>\n                <li id=\"github\">\n                    <a href=\"https://github.com/Grimleik\">Github</a>\n                </li>\n            </ul>\n            <button className=\"button-cv\" onClick={handleDownload}>Download CV</button>\n        </React.Fragment>\n    );\n}","import React from \"react\";\n\nexport default function TicTacToe() {\n    const [squares, setSquares] = React.useState(Array.from({ length: 9 }, (_, idx) => idx));\n    const [turn, setTurn] = React.useState(\"X\");\n    const [gameOver, setGameOver] = React.useState(false);\n\n    function checkWinner(newBoard) {\n        return (\n            (newBoard[0] === newBoard[1] && newBoard[0] === newBoard[2]) ||   // line v1\n            (newBoard[3] === newBoard[4] && newBoard[3] === newBoard[5]) ||   // line v2\n            (newBoard[6] === newBoard[7] && newBoard[6] === newBoard[8]) ||   // line v3\n            (newBoard[0] === newBoard[3] && newBoard[0] === newBoard[6]) ||   // line h1\n            (newBoard[1] === newBoard[4] && newBoard[1] === newBoard[7]) ||   // line h2\n            (newBoard[2] === newBoard[5] && newBoard[2] === newBoard[8]) ||   // line h3\n            (newBoard[0] === newBoard[4] && newBoard[0] === newBoard[8]) ||   // line d1\n            (newBoard[2] === newBoard[4] && newBoard[2] === newBoard[6])      // line d2\n        );\n    }\n\n    return (\n        <>\n            <h1>Tic Tac Toe</h1>\n            <br />\n            {/* Board logic. */}\n            <div className=\"ttt-board\">\n                {squares.map((value, index) => {\n                    return (<React.Fragment key={index}>\n                        <Square key={index} value={value} onClick={() => {\n                            const newSquares = squares.slice();\n                            if (newSquares[index] !== 'X' && newSquares[index] !== 'O' && !gameOver) {\n                                newSquares[index] = turn;\n                                setSquares(newSquares);\n                                const winner = checkWinner(newSquares);\n                                console.log(\"Winner: \", winner);\n                                setGameOver(winner);\n                                setTurn(turn === \"X\" ? \"O\" : \"X\");\n                            }\n                        }} />\n                    </React.Fragment>);\n                })\n                }\n            </div>\n            {gameOver ?\n                (<React.Fragment>\n                    <h2>Game Over winner is {turn === 'X' ? 'O' : 'X'}.</h2>\n                    <button onClick={() => { setSquares(Array.from({ length: 9 }, (_, idx) => idx)); setTurn('X'); setGameOver(false); }}>Play again?</button>\n                </React.Fragment>) :\n                null}\n        </>\n    );\n}\n\nfunction Square({ value, onClick }) {\n    return (\n        <button className=\"ttt-button\" onClick={onClick}>\n            {value === \"X\" ? \"X\" : value === \"O\" ? \"O\" : \"\"}\n        </button>\n    );\n}","\nimport React from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Navbar } from './Navbar';\nimport Projects from './Projects';\nimport Contact from './Contact';\n\nimport TicTacToe from './TicTacToe';\n\n// import { createBrowserRouter } from 'react-router-dom';\n// import { RouterProvider } from \"react-router-dom\";\n// import router from './router';\n// NOTE(pf): Since we are publishing to github pages we have to use hahsrouters.\n// const router = createBrowserRouter([\n//     {\n//         path: \"/portfolio/\",\n//         element: <App />,\n//         children: [\n//             {\n//                 path: \"tic-tac-toe\",\n//                 element: <TicTacToe />,\n//             },\n//             {\n//                 index: true,\n//                 element: <HomePage /> \n//             },\n//         ],\n//     },\n//     {\n//         path: \"/*\",\n//         element: <p>This is not a valid page.</p>\n//     },\n// ]);\n\n// export default function Router() {\n//     return (<>\n//         <React.StrictMode>\n//             <RouterProvider router={router} />\n//         </React.StrictMode>\n//     </>);\n// }\n\nexport default function Router() {\n    return (\n        <HashRouter basename=''>\n            <Header />\n            <Navbar />\n            <Routes>\n                {/* Navbar Links */}\n                <Route path=\"\" element={<HomePage />} />\n                <Route path=\"projects\" element={<Projects/>} />\n                <Route path=\"contact\" element={<Contact/>} />\n                <Route path=\"*\" element={<p>Page not found.</p>} />\n\n                {/* 'Hidden' pages */}\n                <Route path=\"tic-tac-toe\" element={<TicTacToe />} />\n            </Routes>\n\n            <Footer />\n        </HashRouter>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// import {router, router_basename } from './router'\nimport reportWebVitals from './reportWebVitals';\nimport Router from './router';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Router/>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}